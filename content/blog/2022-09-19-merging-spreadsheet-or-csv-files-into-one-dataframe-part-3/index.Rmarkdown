---
title: Merging spreadsheet or csv files into one dataframe - Part 3
author: Mariano
date: '2022-09-19'
slug: [merging-files-part-3]
categories:
  - File merging
tags:
  - rrrrrrrr
subtitle: ''
excerpt: 'A workflow to read data from separate files with a unified format, merge them into a single data frame, then export them as one file. Part 3 - dealing with untidy columns and rows.'
draft: yes
series: ~
layout: single
---

Benvenuti again. Today we improve further our workflow started in [Part 1](https://datamariano.netlify.app/blog/2022-09-07-merging-spreadsheet-or-csv-files-into-one-dataframe-part-1/) and expanded in [Part 2](https://datamariano.netlify.app/blog/2022-09-14-merging-spreadsheet-or-csv-files-into-one-dataframe-part-2/). In these previous episodes we used files with clean header-row-column format so the reading function could do its work with only filename given. important to know that we have no information about files before read 
As always, we start with loading the packages we will use.

```{r packages, message=FALSE}

library(dplyr)
library(readxl)
library(tibble)
library(stringr)
library(lubridate)

```

And continue with setting the working directory, where we have the files. 

```{r setup, include=FALSE}

knitr::opts_knit$set(root.dir = "C:/x/cmm_site_backup/file_folder")

```

```{r eval=FALSE}

setwd("path/to/Downloads2020")

```

Then we get all filenames we want to read. In the pattern argument of `list.files()` the regex ".*csv$" indicates any character string in filenames ending with ".csv".

```{r list files}

filenames <- list.files(pattern = ".*csv$")

```

Printing our `filenames` vector, we can see that we have several files with different logger-associated names.

```{r}

filenames

```
